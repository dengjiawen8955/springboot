[2020-08-04 19:28:28] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 19:28:28] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 19:28:28] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 19:28:28] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 19:28:28] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 19:28:28] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} closed

[2020-08-04 19:28:28] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} closed

[2020-08-04 19:28:28] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} closed

[2020-08-04 19:28:28] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} closed

[2020-08-04 19:28:28] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} closed

[2020-08-04 19:30:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 19:30:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 19:30:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 19:30:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 19:30:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 19:50:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 19:50:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 19:50:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 19:50:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 19:50:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 19:52:03] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 19:52:03] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 19:52:03] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 19:52:03] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 19:52:03] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 19:53:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 19:53:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 19:53:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 19:53:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 19:53:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 19:56:53] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 19:56:53] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 19:56:53] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 19:56:53] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 19:56:53] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 19:59:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 19:59:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 19:59:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 19:59:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 19:59:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 20:03:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 20:03:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 20:03:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 20:03:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 20:03:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 20:05:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 20:05:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 20:05:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 20:05:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 20:05:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 20:06:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 20:06:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 20:06:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 20:06:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 20:06:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 20:24:58] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 20:24:58] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 20:24:58] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 20:24:58] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 20:24:58] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 20:26:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 20:26:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 20:26:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 20:26:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 20:26:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 21:05:18] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 21:05:18] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 21:05:18] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 21:05:18] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 21:05:18] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 21:08:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 21:08:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 21:08:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 21:08:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 21:08:05] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 21:08:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-04 21:08:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userName = ?
        and userPassword = ?

[2020-08-04 21:08:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [null, 1234567]

[2020-08-04 21:08:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [OTHER, VARCHAR]

[2020-08-04 21:08:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 7.6552 millis. select * from smbms.smbms_user where userName = ?
        and userPassword = ?

[2020-08-04 21:08:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-04 21:08:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-04 21:08:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-04 21:08:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-04 21:08:20] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-04 21:12:43] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 21:12:43] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 21:12:43] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 21:12:43] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 21:12:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-04 21:13:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-04 21:13:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userName = ?
        and userPassword = ?

[2020-08-04 21:13:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [null, null]

[2020-08-04 21:13:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [OTHER, OTHER]

[2020-08-04 21:13:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 5.9549 millis. select * from smbms.smbms_user where userName = ?
        and userPassword = ?

[2020-08-04 21:13:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-04 21:13:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-04 21:13:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-04 21:13:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-04 21:13:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-04 21:25:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-04 21:25:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-04 21:25:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-04 21:25:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-04 21:25:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 09:11:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} closed

[2020-08-05 09:11:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} closed

[2020-08-05 09:11:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} closed

[2020-08-05 09:11:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} closed

[2020-08-05 09:11:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} closed

[2020-08-05 09:55:01] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110001} connected

[2020-08-05 09:55:01] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110002} connected

[2020-08-05 09:55:01] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110003} connected

[2020-08-05 09:55:01] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110004} connected

[2020-08-05 09:55:01] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110005} connected

[2020-08-05 09:55:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110001} closed

[2020-08-05 09:55:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110002} closed

[2020-08-05 09:55:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110003} closed

[2020-08-05 09:55:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110004} closed

[2020-08-05 09:55:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110005} closed

[2020-08-05 09:55:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210001} connected

[2020-08-05 09:55:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210002} connected

[2020-08-05 09:55:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210003} connected

[2020-08-05 09:55:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210004} connected

[2020-08-05 09:55:04] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210005} connected

[2020-08-05 09:55:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 09:55:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 09:55:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 09:55:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 09:55:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 09:58:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 09:58:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 09:58:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 09:58:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 09:58:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 09:58:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 09:58:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. insert into smbms.smbms_user
            (userCode,
             userName,
             userPassword,
             gender,
             birthday,
             phone,
             address,
             userRole,
              email)   # 9行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?)

[2020-08-05 09:58:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [发生发大水, fsd, null, 1, 2020-09-04, null, 381 Medford Lakes Rd, Medford, NJ 08055, 3, jarvandeng@163.com]

[2020-08-05 09:58:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR, OTHER, VARCHAR, VARCHAR, OTHER, VARCHAR, VARCHAR, VARCHAR]

[2020-08-05 09:58:56] [ERROR] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLogError(Log4jFilter.java:152)]
{conn-10005, pstmt-20000} execute error. insert into smbms.smbms_user
            (userCode,
             userName,
             userPassword,
             gender,
             birthday,
             phone,
             address,
             userRole,
              email)   # 9行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?)

com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'address' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:619)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy54.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy55.signIn(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy56.signIn(Unknown Source)
	at com.bmft.service.UserServiceImpl.signIn(UserServiceImpl.java:25)
	at com.bmft.controller.Controller01.signIn(Controller01.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
[2020-08-05 09:58:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 09:58:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} closed

[2020-08-05 09:58:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 09:58:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 09:58:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 10:00:43] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 10:00:43] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} created. insert into smbms.smbms_user
            (userCode,
             userName,
             userPassword,
             gender,
             birthday,
             phone,
             address,
             userRole,
              email)   # 9行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?)

[2020-08-05 10:00:43] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Parameters : [发生发大水, fsd, null, 1, 2020-09-04, null, fdsaffas, 3, jarvandeng@163.com]

[2020-08-05 10:00:43] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Types : [VARCHAR, VARCHAR, OTHER, VARCHAR, VARCHAR, OTHER, VARCHAR, VARCHAR, VARCHAR]

[2020-08-05 10:00:43] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} executed. 5.4209 millis. insert into smbms.smbms_user
            (userCode,
             userName,
             userPassword,
             gender,
             birthday,
             phone,
             address,
             userRole,
              email)   # 9行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?)

[2020-08-05 10:00:43] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} clearParameters. 

[2020-08-05 10:00:43] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 11:26:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 11:26:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 11:26:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 11:26:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 11:26:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 11:28:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 11:28:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userName = ?
        and userPassword = ?

[2020-08-05 11:28:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [null, 1234567]

[2020-08-05 11:28:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [OTHER, VARCHAR]

[2020-08-05 11:28:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 7.5563 millis. select * from smbms.smbms_user where userName = ?
        and userPassword = ?

[2020-08-05 11:28:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 11:28:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 11:28:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 11:28:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 11:28:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 11:28:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 11:28:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [null, 1234567]

[2020-08-05 11:28:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [OTHER, VARCHAR]

[2020-08-05 11:28:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 1.3035 millis. select * from smbms.smbms_user where userName = ?
        and userPassword = ?

[2020-08-05 11:28:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} open

[2020-08-05 11:28:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 11:28:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} closed

[2020-08-05 11:28:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 11:28:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 11:30:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 11:30:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 11:30:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 11:30:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 11:30:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 11:31:12] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 11:31:12] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 11:31:12] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, 1234567]

[2020-08-05 11:31:12] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 11:31:12] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 7.4018 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 11:31:12] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 11:31:12] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 11:31:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Result: [1, admin, 系统管理员, 1234567, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 11:31:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 11:31:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 11:31:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 12:20:17] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 12:20:17] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 12:20:17] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 12:20:17] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 12:20:17] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 12:20:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 12:20:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 12:20:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 12:20:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 12:20:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 12:22:10] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 12:22:10] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 12:22:10] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 12:22:10] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 12:22:10] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 12:24:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 12:24:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 12:24:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 12:24:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 12:24:37] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 12:44:10] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 12:44:10] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 12:44:10] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 12:44:10] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 12:44:10] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 12:47:00] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 12:47:00] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 12:47:00] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 12:47:00] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 12:47:00] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 12:49:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 12:49:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 12:49:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 12:49:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 12:49:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 12:50:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 12:50:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 12:50:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 12:50:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 12:50:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 12:52:05] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 12:52:05] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 12:52:05] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 12:52:05] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 12:52:05] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 12:54:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 12:54:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 12:54:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, 1234567]

[2020-08-05 12:54:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 12:54:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 7.8525 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 12:54:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 12:54:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 12:54:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Result: [1, admin, 系统管理员, 1234567, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 12:54:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 12:54:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 12:54:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 12:57:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 12:57:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 12:57:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 12:57:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 12:57:45] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 12:58:11] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 12:58:11] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 12:58:11] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, 1234567]

[2020-08-05 12:58:11] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 12:58:11] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 8.0171 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 12:58:11] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 12:58:11] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 12:58:11] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Result: [1, admin, 系统管理员, 1234567, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 12:58:11] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 12:58:11] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 12:58:11] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 13:00:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 13:00:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 13:00:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 13:00:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 13:00:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 13:00:24] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 13:00:24] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 13:00:24] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, 1234567]

[2020-08-05 13:00:24] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 13:00:24] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 6.0042 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 13:00:24] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 13:00:24] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 13:00:24] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Result: [1, admin, 系统管理员, 1234567, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 13:00:24] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 13:00:24] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 13:00:24] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 13:00:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 13:00:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, 1234567]

[2020-08-05 13:00:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 13:00:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 2.1917 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 13:00:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} open

[2020-08-05 13:00:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 13:00:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} Result: [1, admin, 系统管理员, 1234567, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 13:00:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} closed

[2020-08-05 13:00:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 13:00:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 13:04:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 13:04:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 13:04:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 13:04:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 13:04:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 13:04:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 13:04:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 13:04:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, 1234567]

[2020-08-05 13:04:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 13:04:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 7.7887 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 13:04:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 13:04:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 13:04:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Result: [1, admin, 系统管理员, 1234567, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 13:04:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 13:04:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 13:04:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 13:56:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 13:56:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 13:56:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 13:56:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 13:56:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 13:56:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 13:56:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 13:56:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, 1234567]

[2020-08-05 13:56:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 13:56:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 8.4166 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 13:56:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 13:56:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 13:56:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Result: [1, admin, 系统管理员, 1234567, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 13:56:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 13:56:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 13:56:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 14:05:27] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 14:05:27] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, 1234567]

[2020-08-05 14:05:27] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 14:05:27] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 2.0737 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 14:05:27] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} open

[2020-08-05 14:05:27] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 14:05:27] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} Result: [1, admin, 系统管理员, 1234567, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 14:05:27] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} closed

[2020-08-05 14:05:27] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 14:05:27] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 14:07:40] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 14:07:40] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 14:07:40] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 14:07:40] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 14:07:40] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 14:07:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 14:07:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 14:07:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, 1234567]

[2020-08-05 14:07:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 14:07:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 6.0887 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 14:07:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 14:07:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 14:07:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Result: [1, admin, 系统管理员, 1234567, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 14:07:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 14:07:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 14:07:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 14:18:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 14:18:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, 1234567]

[2020-08-05 14:18:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 14:18:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 1.172 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 14:18:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} open

[2020-08-05 14:18:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 14:18:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50001} closed

[2020-08-05 14:18:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 14:18:56] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 14:19:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 14:19:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, jkljkl]

[2020-08-05 14:19:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 14:19:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 1.443 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 14:19:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50002} open

[2020-08-05 14:19:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50002} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 14:19:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50002} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 14:19:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50002} closed

[2020-08-05 14:19:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 14:19:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 14:19:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 14:19:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, jkljkl]

[2020-08-05 14:19:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 14:19:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 1.3748 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 14:19:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50003} open

[2020-08-05 14:19:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50003} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 14:19:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50003} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 14:19:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50003} closed

[2020-08-05 14:19:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 14:19:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 14:26:19] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 14:26:19] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, jkljkl]

[2020-08-05 14:26:19] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 14:26:19] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 1.6638 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 14:26:19] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50004} open

[2020-08-05 14:26:19] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50004} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 14:26:19] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50004} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 14:26:19] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50004} closed

[2020-08-05 14:26:19] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 14:26:19] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 14:26:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 14:26:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, jkljkl]

[2020-08-05 14:26:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 14:26:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 1.0678 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 14:26:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50005} open

[2020-08-05 14:26:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50005} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 14:26:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50005} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 14:26:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50005} closed

[2020-08-05 14:26:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 14:26:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 14:27:05] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 14:27:05] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 14:27:05] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 14:27:05] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 14:27:05] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 14:27:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 14:27:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 14:27:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, jkljkl]

[2020-08-05 14:27:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 14:27:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 6.6666 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 14:27:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 14:27:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 14:27:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 14:27:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 14:27:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 14:27:13] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 15:10:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} closed

[2020-08-05 15:10:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} closed

[2020-08-05 15:10:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} closed

[2020-08-05 15:10:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} closed

[2020-08-05 15:10:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} closed

[2020-08-05 15:10:07] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} closed

[2020-08-05 15:10:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110001} connected

[2020-08-05 15:10:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110002} connected

[2020-08-05 15:10:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110003} connected

[2020-08-05 15:10:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110004} connected

[2020-08-05 15:10:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110005} connected

[2020-08-05 15:12:51] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 15:12:51] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 15:12:51] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 15:12:51] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 15:12:51] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 15:13:26] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 15:13:26] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 15:13:26] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, jkljkl]

[2020-08-05 15:13:26] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 15:13:26] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 7.6766 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 15:13:26] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 15:13:26] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 15:13:26] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 15:13:26] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 15:13:26] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 15:13:26] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} created. select *,
               smbms.smbms_role.roleName as userRoleName
        from smbms.smbms_user,smbms.smbms_role
        where smbms_user.userRole = smbms_role.id

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Parameters : []

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Types : []

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} executed. 3.316 millis. select *,
               smbms.smbms_role.roleName as userRoleName
        from smbms.smbms_user,smbms.smbms_role
        where smbms_user.userRole = smbms_role.id

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} open

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email, id, roleCode, roleName, createdBy, creationDate, modifyBy, modifyDate, roleName]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null, 1, SMBMS_ADMIN, 系统管理员, 1, 2016-04-13 08:00:00.0, null, null, 系统管理员]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [2, liming, 李明, 0000000, 2, 1983-12-10, 13688884457, 北京市东城区前门东大街9号, 2, 1, 2015-01-01 03:52:09.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [5, hanlubiao, 韩路彪, 0000000, 2, 1984-06-05, 18567542321, 北京市朝阳区北辰中心12号, 2, 1, 2015-01-01 03:52:09.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [6, zhanghua, 张华, 0000000, 1, 1983-06-15, 13544561111, 北京市海淀区学院路61号, 3, 1, 2013-02-11 18:51:17.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [7, wangyang, 王洋, 0000000, 2, 1982-12-31, 13444561124, 北京市海淀区西二旗辉煌国际16层, 3, 1, 2014-06-12 03:09:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [8, zhaoyan, 赵燕, 0000000, 1, 1986-03-07, 18098764545, 北京市海淀区回龙观小区10号楼, 3, 1, 2016-04-21 21:54:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [10, sunlei, 孙磊, 0000000, 2, 1981-01-04, 13387676765, 北京市朝阳区管庄新月小区12楼, 3, 1, 2015-05-06 18:52:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [11, sunxing, 孙兴, 0000000, 2, 1978-03-12, 13367890900, 北京市朝阳区建国门南大街10号, 3, 1, 2016-11-10 00:51:17.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [12, zhangchen, 张晨, 0000000, 1, 1986-03-28, 18098765434, 朝阳区管庄路口北柏林爱乐三期13号楼, 3, 1, 2016-08-09 13:52:37.0, 1, 2016-04-14 22:15:36.0, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [13, dengchao, 邓超, 0000000, 2, 1981-11-04, 13689674534, 北京市海淀区北航家属院10号楼, 3, 1, 2016-07-11 16:02:47.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [14, yangguo, 杨过, 0000000, 2, 1980-01-01, 13388886623, 北京市朝阳区北苑家园茉莉园20号楼, 3, 1, 2015-02-01 11:52:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [15, zhaomin, 赵敏, 0000000, 1, 1987-12-04, 18099897657, 北京市昌平区天通苑3区12号楼, 2, 1, 2015-09-12 20:02:12.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [16, 发生发大水, fsd, null, 1, 2020-09-04, null, fdsaffas, 3, null, null, null, null, jarvandeng@163.com, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} closed

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} clearParameters. 

[2020-08-05 15:13:29] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Parameters : []

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Types : []

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} executed. 1.6435 millis. select *,
               smbms.smbms_role.roleName as userRoleName
        from smbms.smbms_user,smbms.smbms_role
        where smbms_user.userRole = smbms_role.id

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} open

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email, id, roleCode, roleName, createdBy, creationDate, modifyBy, modifyDate, roleName]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null, 1, SMBMS_ADMIN, 系统管理员, 1, 2016-04-13 08:00:00.0, null, null, 系统管理员]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [2, liming, 李明, 0000000, 2, 1983-12-10, 13688884457, 北京市东城区前门东大街9号, 2, 1, 2015-01-01 03:52:09.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [5, hanlubiao, 韩路彪, 0000000, 2, 1984-06-05, 18567542321, 北京市朝阳区北辰中心12号, 2, 1, 2015-01-01 03:52:09.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [6, zhanghua, 张华, 0000000, 1, 1983-06-15, 13544561111, 北京市海淀区学院路61号, 3, 1, 2013-02-11 18:51:17.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [7, wangyang, 王洋, 0000000, 2, 1982-12-31, 13444561124, 北京市海淀区西二旗辉煌国际16层, 3, 1, 2014-06-12 03:09:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [8, zhaoyan, 赵燕, 0000000, 1, 1986-03-07, 18098764545, 北京市海淀区回龙观小区10号楼, 3, 1, 2016-04-21 21:54:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [10, sunlei, 孙磊, 0000000, 2, 1981-01-04, 13387676765, 北京市朝阳区管庄新月小区12楼, 3, 1, 2015-05-06 18:52:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [11, sunxing, 孙兴, 0000000, 2, 1978-03-12, 13367890900, 北京市朝阳区建国门南大街10号, 3, 1, 2016-11-10 00:51:17.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [12, zhangchen, 张晨, 0000000, 1, 1986-03-28, 18098765434, 朝阳区管庄路口北柏林爱乐三期13号楼, 3, 1, 2016-08-09 13:52:37.0, 1, 2016-04-14 22:15:36.0, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [13, dengchao, 邓超, 0000000, 2, 1981-11-04, 13689674534, 北京市海淀区北航家属院10号楼, 3, 1, 2016-07-11 16:02:47.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [14, yangguo, 杨过, 0000000, 2, 1980-01-01, 13388886623, 北京市朝阳区北苑家园茉莉园20号楼, 3, 1, 2015-02-01 11:52:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [15, zhaomin, 赵敏, 0000000, 1, 1987-12-04, 18099897657, 北京市昌平区天通苑3区12号楼, 2, 1, 2015-09-12 20:02:12.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} Result: [16, 发生发大水, fsd, null, 1, 2020-09-04, null, fdsaffas, 3, null, null, null, null, jarvandeng@163.com, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50002} closed

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} clearParameters. 

[2020-08-05 16:16:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 17:30:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 17:30:42] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 17:30:42] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 17:30:42] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 17:30:42] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 17:30:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 17:30:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 17:30:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, jkljkl]

[2020-08-05 17:30:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 17:30:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 7.3507 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 17:30:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 17:30:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 17:30:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 17:30:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 17:30:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 17:30:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} created. select *,
               smbms.smbms_role.roleName as userRoleName
        from smbms.smbms_user,smbms.smbms_role
        where smbms_user.userRole = smbms_role.id

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Parameters : []

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Types : []

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} executed. 3.3366 millis. select *,
               smbms.smbms_role.roleName as userRoleName
        from smbms.smbms_user,smbms.smbms_role
        where smbms_user.userRole = smbms_role.id

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} open

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email, id, roleCode, roleName, createdBy, creationDate, modifyBy, modifyDate, roleName]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null, 1, SMBMS_ADMIN, 系统管理员, 1, 2016-04-13 08:00:00.0, null, null, 系统管理员]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [2, liming, 李明, 0000000, 2, 1983-12-10, 13688884457, 北京市东城区前门东大街9号, 2, 1, 2015-01-01 03:52:09.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [5, hanlubiao, 韩路彪, 0000000, 2, 1984-06-05, 18567542321, 北京市朝阳区北辰中心12号, 2, 1, 2015-01-01 03:52:09.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [6, zhanghua, 张华, 0000000, 1, 1983-06-15, 13544561111, 北京市海淀区学院路61号, 3, 1, 2013-02-11 18:51:17.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [7, wangyang, 王洋, 0000000, 2, 1982-12-31, 13444561124, 北京市海淀区西二旗辉煌国际16层, 3, 1, 2014-06-12 03:09:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [8, zhaoyan, 赵燕, 0000000, 1, 1986-03-07, 18098764545, 北京市海淀区回龙观小区10号楼, 3, 1, 2016-04-21 21:54:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [10, sunlei, 孙磊, 0000000, 2, 1981-01-04, 13387676765, 北京市朝阳区管庄新月小区12楼, 3, 1, 2015-05-06 18:52:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [11, sunxing, 孙兴, 0000000, 2, 1978-03-12, 13367890900, 北京市朝阳区建国门南大街10号, 3, 1, 2016-11-10 00:51:17.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [12, zhangchen, 张晨, 0000000, 1, 1986-03-28, 18098765434, 朝阳区管庄路口北柏林爱乐三期13号楼, 3, 1, 2016-08-09 13:52:37.0, 1, 2016-04-14 22:15:36.0, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [13, dengchao, 邓超, 0000000, 2, 1981-11-04, 13689674534, 北京市海淀区北航家属院10号楼, 3, 1, 2016-07-11 16:02:47.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [14, yangguo, 杨过, 0000000, 2, 1980-01-01, 13388886623, 北京市朝阳区北苑家园茉莉园20号楼, 3, 1, 2015-02-01 11:52:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [15, zhaomin, 赵敏, 0000000, 1, 1987-12-04, 18099897657, 北京市昌平区天通苑3区12号楼, 2, 1, 2015-09-12 20:02:12.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [16, 发生发大水, fsd, null, 1, 2020-09-04, null, fdsaffas, 3, null, null, null, null, jarvandeng@163.com, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} closed

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} clearParameters. 

[2020-08-05 17:30:57] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 17:34:15] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 17:34:15] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20002} created. insert into smbms.smbms_user
        (userCode,
         userName,
         userPassword,
         gender,
         birthday,
         phone,
         address,
         userRole,
         email,
         createdBy,
         creationDate
         )   # 11行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
                ?,
                ?)

[2020-08-05 17:34:15] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20002} Parameters : [admin建国后非常, 就荒废工厂, null, 1, 2020-07-31 00:00:00.0, 2020-08-20, 发送端, 3, jarvandeng@163.com, null, 2020-08-05 17:34:15.028]

[2020-08-05 17:34:15] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20002} Types : [VARCHAR, VARCHAR, OTHER, VARCHAR, TIMESTAMP, VARCHAR, VARCHAR, VARCHAR, VARCHAR, OTHER, TIMESTAMP]

[2020-08-05 17:34:15] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20002} executed. 4.1494 millis. insert into smbms.smbms_user
        (userCode,
         userName,
         userPassword,
         gender,
         birthday,
         phone,
         address,
         userRole,
         email,
         createdBy,
         creationDate
         )   # 11行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
                ?,
                ?)

[2020-08-05 17:34:15] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20002} clearParameters. 

[2020-08-05 17:34:15] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 17:35:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 17:35:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 17:35:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 17:35:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 17:35:44] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 17:35:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 17:35:48] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. insert into smbms.smbms_user
        (userCode,
         userName,
         userPassword,
         gender,
         birthday,
         phone,
         address,
         userRole,
         email,
         createdBy,
         creationDate
         )   # 11行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
                ?,
                ?)

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin建国后非常, 就荒废工厂, null, 1, 2020-07-31 00:00:00.0, 2020-08-20, 发送端, 3, jarvandeng@163.com, null, 2020-08-05 17:35:48.927]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR, OTHER, VARCHAR, TIMESTAMP, VARCHAR, VARCHAR, VARCHAR, VARCHAR, OTHER, TIMESTAMP]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 7.4999 millis. insert into smbms.smbms_user
        (userCode,
         userName,
         userPassword,
         gender,
         birthday,
         phone,
         address,
         userRole,
         email,
         createdBy,
         creationDate
         )   # 11行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
                ?,
                ?)

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} created. select *,
               smbms.smbms_role.roleName as userRoleName
        from smbms.smbms_user,smbms.smbms_role
        where smbms_user.userRole = smbms_role.id

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Parameters : []

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Types : []

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} executed. 8.0417 millis. select *,
               smbms.smbms_role.roleName as userRoleName
        from smbms.smbms_user,smbms.smbms_role
        where smbms_user.userRole = smbms_role.id

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} open

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email, id, roleCode, roleName, createdBy, creationDate, modifyBy, modifyDate, roleName]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null, 1, SMBMS_ADMIN, 系统管理员, 1, 2016-04-13 08:00:00.0, null, null, 系统管理员]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [2, liming, 李明, 0000000, 2, 1983-12-10, 13688884457, 北京市东城区前门东大街9号, 2, 1, 2015-01-01 03:52:09.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [5, hanlubiao, 韩路彪, 0000000, 2, 1984-06-05, 18567542321, 北京市朝阳区北辰中心12号, 2, 1, 2015-01-01 03:52:09.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [6, zhanghua, 张华, 0000000, 1, 1983-06-15, 13544561111, 北京市海淀区学院路61号, 3, 1, 2013-02-11 18:51:17.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [7, wangyang, 王洋, 0000000, 2, 1982-12-31, 13444561124, 北京市海淀区西二旗辉煌国际16层, 3, 1, 2014-06-12 03:09:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [8, zhaoyan, 赵燕, 0000000, 1, 1986-03-07, 18098764545, 北京市海淀区回龙观小区10号楼, 3, 1, 2016-04-21 21:54:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [10, sunlei, 孙磊, 0000000, 2, 1981-01-04, 13387676765, 北京市朝阳区管庄新月小区12楼, 3, 1, 2015-05-06 18:52:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [11, sunxing, 孙兴, 0000000, 2, 1978-03-12, 13367890900, 北京市朝阳区建国门南大街10号, 3, 1, 2016-11-10 00:51:17.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [12, zhangchen, 张晨, 0000000, 1, 1986-03-28, 18098765434, 朝阳区管庄路口北柏林爱乐三期13号楼, 3, 1, 2016-08-09 13:52:37.0, 1, 2016-04-14 22:15:36.0, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [13, dengchao, 邓超, 0000000, 2, 1981-11-04, 13689674534, 北京市海淀区北航家属院10号楼, 3, 1, 2016-07-11 16:02:47.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [14, yangguo, 杨过, 0000000, 2, 1980-01-01, 13388886623, 北京市朝阳区北苑家园茉莉园20号楼, 3, 1, 2015-02-01 11:52:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [15, zhaomin, 赵敏, 0000000, 1, 1987-12-04, 18099897657, 北京市昌平区天通苑3区12号楼, 2, 1, 2015-09-12 20:02:12.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [16, 发生发大水, fsd, null, 1, 2020-09-04, null, fdsaffas, 3, null, null, null, null, jarvandeng@163.com, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [17, admin建国后非常, 就荒废工厂, null, 1, 2020-07-30, 2020-08-20, 发送端, 3, null, 2020-08-05 17:34:15.0, null, null, jarvandeng@163.com, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} Result: [18, admin建国后非常, 就荒废工厂, null, 1, 2020-07-30, 2020-08-20, 发送端, 3, null, 2020-08-05 17:35:49.0, null, null, jarvandeng@163.com, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50000} closed

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} clearParameters. 

[2020-08-05 17:35:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [rootfas, fas防守打法, null, 1, 2020-07-31 00:00:00.0, 范德萨, 发送端, 3, dengjiawen8955@gmail.com, null, 2020-08-05 17:36:34.773]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR, OTHER, VARCHAR, TIMESTAMP, VARCHAR, VARCHAR, VARCHAR, VARCHAR, OTHER, TIMESTAMP]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 4.5376 millis. insert into smbms.smbms_user
        (userCode,
         userName,
         userPassword,
         gender,
         birthday,
         phone,
         address,
         userRole,
         email,
         createdBy,
         creationDate
         )   # 11行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
                ?,
                ?)

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Parameters : []

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} Types : []

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} executed. 1.5331 millis. select *,
               smbms.smbms_role.roleName as userRoleName
        from smbms.smbms_user,smbms.smbms_role
        where smbms_user.userRole = smbms_role.id

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} open

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email, id, roleCode, roleName, createdBy, creationDate, modifyBy, modifyDate, roleName]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null, 1, SMBMS_ADMIN, 系统管理员, 1, 2016-04-13 08:00:00.0, null, null, 系统管理员]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [2, liming, 李明, 0000000, 2, 1983-12-10, 13688884457, 北京市东城区前门东大街9号, 2, 1, 2015-01-01 03:52:09.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [5, hanlubiao, 韩路彪, 0000000, 2, 1984-06-05, 18567542321, 北京市朝阳区北辰中心12号, 2, 1, 2015-01-01 03:52:09.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [6, zhanghua, 张华, 0000000, 1, 1983-06-15, 13544561111, 北京市海淀区学院路61号, 3, 1, 2013-02-11 18:51:17.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [7, wangyang, 王洋, 0000000, 2, 1982-12-31, 13444561124, 北京市海淀区西二旗辉煌国际16层, 3, 1, 2014-06-12 03:09:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [8, zhaoyan, 赵燕, 0000000, 1, 1986-03-07, 18098764545, 北京市海淀区回龙观小区10号楼, 3, 1, 2016-04-21 21:54:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [10, sunlei, 孙磊, 0000000, 2, 1981-01-04, 13387676765, 北京市朝阳区管庄新月小区12楼, 3, 1, 2015-05-06 18:52:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [11, sunxing, 孙兴, 0000000, 2, 1978-03-12, 13367890900, 北京市朝阳区建国门南大街10号, 3, 1, 2016-11-10 00:51:17.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [12, zhangchen, 张晨, 0000000, 1, 1986-03-28, 18098765434, 朝阳区管庄路口北柏林爱乐三期13号楼, 3, 1, 2016-08-09 13:52:37.0, 1, 2016-04-14 22:15:36.0, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [13, dengchao, 邓超, 0000000, 2, 1981-11-04, 13689674534, 北京市海淀区北航家属院10号楼, 3, 1, 2016-07-11 16:02:47.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [14, yangguo, 杨过, 0000000, 2, 1980-01-01, 13388886623, 北京市朝阳区北苑家园茉莉园20号楼, 3, 1, 2015-02-01 11:52:07.0, null, null, null, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [15, zhaomin, 赵敏, 0000000, 1, 1987-12-04, 18099897657, 北京市昌平区天通苑3区12号楼, 2, 1, 2015-09-12 20:02:12.0, null, null, null, 2, SMBMS_MANAGER, 经理, 1, 2016-04-13 08:00:00.0, null, null, 经理]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [16, 发生发大水, fsd, null, 1, 2020-09-04, null, fdsaffas, 3, null, null, null, null, jarvandeng@163.com, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [17, admin建国后非常, 就荒废工厂, null, 1, 2020-07-30, 2020-08-20, 发送端, 3, null, 2020-08-05 17:34:15.0, null, null, jarvandeng@163.com, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [18, admin建国后非常, 就荒废工厂, null, 1, 2020-07-30, 2020-08-20, 发送端, 3, null, 2020-08-05 17:35:49.0, null, null, jarvandeng@163.com, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} Result: [19, rootfas, fas防守打法, null, 1, 2020-07-30, 范德萨, 发送端, 3, null, 2020-08-05 17:36:35.0, null, null, dengjiawen8955@gmail.com, 3, SMBMS_EMPLOYEE, 普通员工, 1, 2016-04-13 08:00:00.0, null, null, 普通员工]

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20001, rs-50001} closed

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20001} clearParameters. 

[2020-08-05 17:36:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 19:09:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:09:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:09:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:09:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:09:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:10:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:10:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:10:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:10:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:10:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:18:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:18:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:18:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:18:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:18:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:20:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:20:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:20:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:20:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:20:47] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:21:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:21:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:21:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:21:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:21:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:21:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 19:21:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 19:21:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, jkljkl]

[2020-08-05 19:21:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR]

[2020-08-05 19:21:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 6.0467 millis. select * from smbms.smbms_user where userCode = ?
        and userPassword = ?

[2020-08-05 19:21:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} open

[2020-08-05 19:21:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Header: [id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate, email]

[2020-08-05 19:21:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} Result: [1, admin, 系统管理员, jkljkl, 1, 1983-10-10, 13688889999, 北京市海淀区成府路207号, 1, 1, 2013-03-22 00:52:07.0, null, null, null]

[2020-08-05 19:21:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)]
{conn-10005, pstmt-20000, rs-50000} closed

[2020-08-05 19:21:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 19:21:55] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 19:23:22] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:23:22] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:23:22] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:23:22] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:23:22] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:24:25] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:24:25] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:24:25] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:24:25] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:24:25] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:24:59] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:24:59] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:24:59] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:24:59] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:24:59] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:27:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:27:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:27:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:27:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:27:34] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:30:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:30:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:30:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:30:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:30:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:36:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:36:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:36:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:36:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:36:09] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:38:01] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:38:01] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:38:01] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:38:01] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:38:01] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:51:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:51:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:51:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:51:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:51:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:52:21] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 19:52:21] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. insert into smbms.smbms_user
            (userCode,
             userName,
             userPassword,
             gender,
             birthday,
             phone,
             address,
             userRole,
              email)   # 9行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?)

[2020-08-05 19:52:21] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [admin, admin, null, 1, 2020-07-31 00:00:00.0, null, null, 1, 2530196154@qq.com]

[2020-08-05 19:52:21] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR, OTHER, VARCHAR, TIMESTAMP, OTHER, OTHER, VARCHAR, VARCHAR]

[2020-08-05 19:52:21] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 5.1603 millis. insert into smbms.smbms_user
            (userCode,
             userName,
             userPassword,
             gender,
             birthday,
             phone,
             address,
             userRole,
              email)   # 9行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?)

[2020-08-05 19:52:21] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 19:52:21] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 19:54:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:54:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:54:35] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:54:36] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:54:36] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 19:55:36] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 19:55:36] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 19:55:36] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 19:55:36] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 19:55:36] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 20:00:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 20:00:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 20:00:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 20:00:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 20:00:16] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 20:01:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 20:01:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 20:01:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 20:01:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 20:01:23] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 20:31:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 20:31:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 20:31:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 20:31:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 20:31:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 20:40:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 20:40:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 20:40:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 20:40:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 20:40:46] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 20:43:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 20:43:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 20:43:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 20:43:41] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 20:43:42] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 20:48:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} closed

[2020-08-05 20:48:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} closed

[2020-08-05 20:48:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} closed

[2020-08-05 20:48:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} closed

[2020-08-05 20:48:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} closed

[2020-08-05 20:48:33] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110001} connected

[2020-08-05 20:48:33] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110002} connected

[2020-08-05 20:48:33] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110003} connected

[2020-08-05 20:48:33] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110004} connected

[2020-08-05 20:48:33] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110005} connected

[2020-08-05 20:50:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110001} closed

[2020-08-05 20:50:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110002} closed

[2020-08-05 20:50:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110003} closed

[2020-08-05 20:50:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110004} closed

[2020-08-05 20:50:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-110005} closed

[2020-08-05 20:50:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210001} connected

[2020-08-05 20:50:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210002} connected

[2020-08-05 20:50:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210003} connected

[2020-08-05 20:50:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210004} connected

[2020-08-05 20:50:08] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210005} connected

[2020-08-05 20:50:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210001} closed

[2020-08-05 20:50:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210002} closed

[2020-08-05 20:50:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210003} closed

[2020-08-05 20:50:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210004} closed

[2020-08-05 20:50:50] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-210005} closed

[2020-08-05 20:50:51] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-310001} connected

[2020-08-05 20:50:51] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-310002} connected

[2020-08-05 20:50:51] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-310003} connected

[2020-08-05 20:50:51] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-310004} connected

[2020-08-05 20:50:51] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-310005} connected

[2020-08-05 20:54:30] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-310001} closed

[2020-08-05 20:54:30] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-310002} closed

[2020-08-05 20:54:30] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-310003} closed

[2020-08-05 20:54:30] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-310004} closed

[2020-08-05 20:54:30] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-310005} closed

[2020-08-05 20:54:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-410001} connected

[2020-08-05 20:54:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-410002} connected

[2020-08-05 20:54:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-410003} connected

[2020-08-05 20:54:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-410004} connected

[2020-08-05 20:54:31] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-410005} connected

[2020-08-05 20:57:53] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-410001} closed

[2020-08-05 20:57:53] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-410002} closed

[2020-08-05 20:57:53] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-410003} closed

[2020-08-05 20:57:53] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-410004} closed

[2020-08-05 20:57:53] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-410005} closed

[2020-08-05 20:57:54] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-510001} connected

[2020-08-05 20:57:54] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-510002} connected

[2020-08-05 20:57:54] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-510003} connected

[2020-08-05 20:57:54] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-510004} connected

[2020-08-05 20:57:54] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-510005} connected

[2020-08-05 21:01:06] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 21:01:06] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 21:01:06] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 21:01:06] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 21:01:06] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 21:11:40] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 21:11:40] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 21:11:40] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 21:11:40] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 21:11:40] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

[2020-08-05 21:12:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-connect

[2020-08-05 21:12:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} created. insert into smbms.smbms_user
            (userCode,
             userName,
             userPassword,
             gender,
             birthday,
             phone,
             address,
             userRole,
              email)   # 9行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?)

[2020-08-05 21:12:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Parameters : [rfafaSf, fdasf, null, 1, 2020-07-31 00:00:00.0, 13300000000, fdasf, 1, dengjiawen8955@gmail.com]

[2020-08-05 21:12:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} Types : [VARCHAR, VARCHAR, OTHER, VARCHAR, TIMESTAMP, VARCHAR, VARCHAR, VARCHAR, VARCHAR]

[2020-08-05 21:12:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} executed. 5.895 millis. insert into smbms.smbms_user
            (userCode,
             userName,
             userPassword,
             gender,
             birthday,
             phone,
             address,
             userRole,
              email)   # 9行
            VALUE
            (?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?,
             ?)

[2020-08-05 21:12:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)]
{conn-10005, pstmt-20000} clearParameters. 

[2020-08-05 21:12:32] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} pool-recycle

[2020-08-05 21:14:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10001} connected

[2020-08-05 21:14:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10002} connected

[2020-08-05 21:14:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10003} connected

[2020-08-05 21:14:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10004} connected

[2020-08-05 21:14:49] [DEBUG] [method:com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)]
{conn-10005} connected

